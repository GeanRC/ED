
package InterfaceGrafica;

import Implementacoes.PilhaEnc;
import java.awt.Graphics;
import static java.awt.image.ImageObserver.HEIGHT;
import javax.swing.JOptionPane;

/*
 * @author Gean RC
 */

public class Pilha extends javax.swing.JFrame {
    
    public Pilha(){
        initComponents();
        createBufferStrategy(1);
        setLocationRelativeTo(null);
    }

    Graphics e;
    PilhaEnc pilhaEnc = new PilhaEnc();
    int y = 300;
    String t = new String();
    int save;
    int elem = 0;
    
    public boolean validarCampos(){
        if(valor_txt.getText().isEmpty()){
            //Verifica se tem campo vazio
            JOptionPane.showMessageDialog(this, "Campo vazio! Por favor preencha!", "Campo vazio", JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
                //verifica se foram colocados valores errados
            try {
                Integer.parseInt(valor_txt.getText());
            }catch (NumberFormatException e){
                //Exibe a mensagem de erro caso digitem errado
                JOptionPane.showMessageDialog(this, "Entrada invalida! Apenas numeros", "Invalido!", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        return true;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        push_BT = new javax.swing.JButton();
        pop_BT = new javax.swing.JButton();
        top_BT = new javax.swing.JButton();
        valor_txt = new javax.swing.JTextField();
        elementos_txt = new javax.swing.JLabel();
        topo_Ti = new javax.swing.JLabel();
        elementos_Ti = new javax.swing.JLabel();
        topo_txt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pilha (Encadeada)");

        push_BT.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        push_BT.setText("Push");
        push_BT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                push_BTActionPerformed(evt);
            }
        });

        pop_BT.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        pop_BT.setText("Pop");
        pop_BT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pop_BTActionPerformed(evt);
            }
        });

        top_BT.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        top_BT.setText("Top");
        top_BT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                top_BTActionPerformed(evt);
            }
        });

        valor_txt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        valor_txt.setFocusCycleRoot(true);
        valor_txt.setFocusTraversalPolicyProvider(true);
        valor_txt.setNextFocusableComponent(valor_txt);
        valor_txt.setOpaque(false);

        elementos_txt.setText(" ");

        topo_Ti.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        topo_Ti.setText("Topo:");

        elementos_Ti.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        elementos_Ti.setText("Elementos:");

        topo_txt.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(559, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(push_BT, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(pop_BT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(top_BT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(valor_txt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(topo_Ti)
                            .addGap(58, 58, 58)
                            .addComponent(topo_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(elementos_Ti)
                        .addGap(18, 18, 18)
                        .addComponent(elementos_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(topo_Ti)
                    .addComponent(topo_txt))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elementos_txt)
                    .addComponent(elementos_Ti))
                .addGap(18, 18, 18)
                .addComponent(push_BT)
                .addGap(18, 18, 18)
                .addComponent(pop_BT)
                .addGap(18, 18, 18)
                .addComponent(top_BT)
                .addGap(18, 18, 18)
                .addComponent(valor_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void push_BTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_push_BTActionPerformed
        e = getBufferStrategy().getDrawGraphics();
        topo_txt.setText(" ");
        if(validarCampos()){
        if(pilhaEnc.vazia()){
            e.drawRect(250, y, 40, 50);
            e.drawLine(250, y+15, 290, y+15);
            t = valor_txt.getText();
            e.drawString(t, 270, y+30);
            save = Integer.parseInt(t);
            pilhaEnc.push(save);
            valor_txt.setText(null);
            y = y-70;
            e.dispose();
            getBufferStrategy().show();
            elem++;
            elementos_txt.setText(Integer.toString(elem));
        }
        else{
            e.drawRect(250, y, 40, 50);
            e.drawLine(250, y+15, 290, y+15);
            e.drawLine(275,y+50 ,275 ,y+70);
            t = valor_txt.getText();
            e.drawString(t, 270, y+30);
            save = Integer.parseInt(t);
            pilhaEnc.push(save);
            valor_txt.setText(null);
            y = y-70;
            e.dispose();
            getBufferStrategy().show();
            elem++;
            elementos_txt.setText(Integer.toString(elem));
        }
        }
        valor_txt.setText("");
    }//GEN-LAST:event_push_BTActionPerformed

    private void pop_BTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pop_BTActionPerformed
       e = getBufferStrategy().getDrawGraphics();
       topo_txt.setText(" ");
       if(pilhaEnc.vazia()){
           JOptionPane.showMessageDialog(rootPane, "Pilha Vazia", "ERRO", HEIGHT);
       }
       else{
           pilhaEnc.pop();
           e.clearRect(249, y+70, 42, 70);
           y = y + 70;
           e.dispose();
           getBufferStrategy().show();
           elem--;
           elementos_txt.setText(Integer.toString(elem));
       }
       valor_txt.setText("");
    }//GEN-LAST:event_pop_BTActionPerformed
    private void top_BTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_top_BTActionPerformed
        if(pilhaEnc.vazia()){
            JOptionPane.showMessageDialog(rootPane, "Pilha vazia", "ERRO", HEIGHT);
        }
        else{
            topo_txt.setText(Integer.toString(pilhaEnc.top()));
        }
    }//GEN-LAST:event_top_BTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windown".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pilha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pilha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pilha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pilha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pilha().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel elementos_Ti;
    private javax.swing.JLabel elementos_txt;
    private javax.swing.JButton pop_BT;
    private javax.swing.JButton push_BT;
    private javax.swing.JButton top_BT;
    private javax.swing.JLabel topo_Ti;
    private javax.swing.JLabel topo_txt;
    private javax.swing.JTextField valor_txt;
    // End of variables declaration//GEN-END:variables
}
